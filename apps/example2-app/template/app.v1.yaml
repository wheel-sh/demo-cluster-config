apiVersion: v1
kind: Template
metadata:
  name: example-app
parameters:
  - name: IMAGE_NAME
    displayName: Image Name
    required: true
  - name: IMAGE_VERSION
    displayName: Image Version
    required: true
  - name: REPLICA_COUNT
    displayName: Replicas
    value: "1"
    required: true
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: example-app
      name: example-app
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: example-app
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: example-app
      name: example-app
    spec:
      replicas: ${{REPLICA_COUNT}}
      selector:
        app: example-app
        deploymentconfig: example-app
      strategy:
        type: Rolling
      triggers:
        - type: ConfigChange
      template:
        metadata:
          labels:
            app: example-app
            deploymentconfig: example-app
        spec:
          containers:
            - image: ${IMAGE_NAME}:${IMAGE_VERSION}
              imagePullPolicy: Always
              name: nginx
              ports:
                - containerPort: 8080
                  protocol: TCP
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: example-app
      name: example-app
    spec:
      port:
        targetPort: 8080-tcp
      tls:
        termination: edge
      to:
        kind: Service
        name: example-app
#  - apiVersion: kafka.strimzi.io/v1alpha1
#    kind: Kafka
#    metadata:
#      name: example-kafka-cluster
#    spec:
#      kafka:
#        replicas: 1
#        listeners:
#          plain: {}
#          tls: {}
#          external:
#            type: route
#        config:
#          offsets.topic.replication.factor: 1
#          transaction.state.log.replication.factor: 1
#          transaction.state.log.min.isr: 1
#        storage:
#          type: persistent-claim
#          size: 3Gi
#          deleteClaim: false
#      zookeeper:
#        replicas: 1
#        storage:
#          type: persistent-claim
#          size: 1Gi
#          deleteClaim: false
#      entityOperator:
#        topicOperator: {}
#        userOperator: {}